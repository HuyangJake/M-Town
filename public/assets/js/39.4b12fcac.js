(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{367:function(a,t,n){"use strict";n.r(t);var e=n(0),s=Object(e.a)({},function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("p",[a._v("先来一段引用改变下对动画的世界观：")]),a._v(" "),n("blockquote",[n("p",[a._v("Core Animation基于一个假设，说屏幕上的任何东西都可以（或者可能）做动画。 动画并不需要你在Core Animation中手动打开，相反需要明确地关闭，否则他会一直存在。")])]),a._v(" "),n("div",{staticClass:"language-objctivec line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("\n \tCGFloat red = arc4random() / (CGFloat)INT_MAX;\n    CGFloat green = arc4random() / (CGFloat)INT_MAX;\n    CGFloat blue = arc4random() / (CGFloat)INT_MAX;\n\n    self.colorLayer.backgroundColor = [UIColor colorWithRed:red green:green blue:blue alpha:1.0].CGColor;\n    \n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("p",[a._v("上面这样的一段代码，没有设置任何动画，但是在运行的时候会发现颜色的变化并不是突变的，有一定的动画效果。这个动画怎么实现的，时间又是多少呢？ 这得先从事务说起。")]),a._v(" "),n("blockquote",[n("p",[a._v("事务是Core Animation用来包含一系列属性动画集合的机制，任何用指定事务去改变可以做动画的图层属性都不会立刻发生变化，而是当事务一旦提交的时候开始用一个动画过渡到新值。")])]),a._v(" "),n("blockquote",[n("p",[a._v("事务通过 CATransaction 类来做管理，使用+begin和+commit来入栈和出栈。")])]),a._v(" "),n("p",[a._v("Core Animation在每个run loop周期中自动开始一次新的事务，即使不显式的调用"),n("code",[a._v("[CATransaction begin]")]),a._v(" 开始一次事务，任何在一次run loop循环中属性的改变都会被集中起来，然后做一次__0.25__秒的动画。")]),a._v(" "),n("h2",{attrs:{id:"关闭隐式动画"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关闭隐式动画","aria-hidden":"true"}},[a._v("#")]),a._v(" 关闭隐式动画")]),a._v(" "),n("p",[a._v("Core Animation通常对CALayer的所有属性（可动画的属性）做动画，但是UIView把它关联的图层的这个特性关闭了。")]),a._v(" "),n("p",[a._v("我们把改变属性时CALayer自动应用的动画称作行为，当CALayer的属性被修改时候，它会调用-actionForKey:方法，传递属性的名称。\n具体看看是隐式动画的实现步骤：")]),a._v(" "),n("p",[a._v("这是"),n("code",[a._v("CALayer")]),a._v("头文件里对"),n("code",[a._v("actionForKey:")]),a._v("方法调用的描述")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/* Returns the action object associated with the event named by the\n * string 'event'. The default implementation searches for an action\n * object in the following places:\n *\n * 1. if defined, call the delegate method -actionForLayer:forKey:\n * 2. look in the layer's `actions' dictionary\n * 3. look in any `actions' dictionaries in the `style' hierarchy\n * 4. call +defaultActionForKey: on the layer's class\n *\n * If any of these steps results in a non-nil action object, the\n * following steps are ignored. If the final result is an instance of\n * NSNull, it is converted to `nil'. */\n\n- (nullable id<CAAction>)actionForKey:(NSString *)event;\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br")])]),n("ol",[n("li",[n("p",[a._v("图层首先检测它是否有委托，并且是否实现CALayerDelegate协议指定的-actionForLayer:forKey方法。如果有，直接调用并返回结果。")])]),a._v(" "),n("li",[n("p",[a._v("如果没有委托，或者委托没有实现-actionForLayer:forKey方法，图层接着检查包含属性名称对应行为映射的actions字典。")])]),a._v(" "),n("li",[n("p",[a._v("如果actions字典没有包含对应的属性，那么图层接着在它的style字典接着搜索属性名。")])]),a._v(" "),n("li",[n("p",[a._v("最后，如果在style里面也找不到对应的行为，那么图层将会直接调用定义了每个属性的标准行为的-defaultActionForKey:方法。")])])]),a._v(" "),n("p",[a._v("所以一轮完整的搜索结束之后，-actionForKey:要么返回空（这种情况下将不会有动画发生），要么是CAAction协议对应的对象，最后CALayer拿这个结果去对先前和当前的值做动画。")]),a._v(" "),n("p",[a._v("这就解释了UIKit是如何禁用隐式动画的：每个UIView对它关联的图层都扮演了一个委托，并且提供了-actionForLayer:forKey的实现方法。当不在一个动画块的实现中，UIView对所有图层行为返回nil，但是在动画block范围之内，它就返回了一个非空值。")]),a._v(" "),n("p",[a._v("ps : "),n("code",[a._v("[CATransaction begin]")]),a._v("之后添加下面的代码，同样也会阻止动画的发生：")]),a._v(" "),n("pre",[n("code",[a._v("\t[CATransaction setDisableActions:YES];\n")])]),a._v(" "),n("h2",{attrs:{id:"关联图层设置动画"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关联图层设置动画","aria-hidden":"true"}},[a._v("#")]),a._v(" 关联图层设置动画")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("UIView关联的图层禁用了隐式动画，对这种图层做动画的唯一办法就是使用UIView的动画函数（而不是依赖CATransaction），或者继承UIView，并覆盖-actionForLayer:forKey:方法，或者直接创建一个"),n("a",{attrs:{href:""}},[a._v("显式动画")]),n("em",[a._v("（等待下一篇笔记）")]),a._v("。")])]),a._v(" "),n("li",[n("p",[a._v("对于单独存在的图层，我们可以通过实现图层的-actionForLayer:forKey:委托方法，或者提供一个actions字典来控制隐式动画。")])])]),a._v(" "),n("h2",{attrs:{id:"自定义行为"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义行为","aria-hidden":"true"}},[a._v("#")]),a._v(" 自定义行为")]),a._v(" "),n("p",[a._v("行为通常是一个被Core Animation隐式调用的显式动画。")]),a._v(" "),n("p",[a._v("我们来对颜色渐变的代码（文章顶部）使用一个不同的行为，通过给colorLayer设置一个自定义的actions字典。我们也可以使用委托来实现，但是actions字典可以写更少的代码。")]),a._v(" "),n("p",[a._v("PS: CATransition响应CAAction协议，并且可以当做一个图层行为")]),a._v(" "),n("div",{staticClass:"language-objectivec line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[a._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//add a custom action")]),a._v("\n    CATransition "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("transition "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("CATransition animation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    transition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("type "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" kCATransitionPush"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    transition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("subtype "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" kCATransitionFromLeft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("colorLayer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("actions "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("@")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('@"backgroundColor"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" transition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    \n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("p",[a._v("在初始化的时候给layer添加了这样的行为之后，就可以对隐式动画添加了一个 推进过度 的效果")]),a._v(" "),n("h2",{attrs:{id:"reference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reference","aria-hidden":"true"}},[a._v("#")]),a._v(" Reference")]),a._v(" "),n("p",[n("a",{attrs:{href:"https://zsisme.gitbooks.io/ios-/content/chapter7/layer-actions.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("iOS Core Animation"),n("OutboundLink")],1),a._v(" 十分感谢译者")])])},[],!1,null,null,null);t.default=s.exports}}]);