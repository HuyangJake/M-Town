(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{358:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("“不常用只是对我个人而言，不喜勿喷~”\n那么我先列一下要讲到的git命令吧")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("git rebase\ngit rebase --onto\ngit reset --soft\ngit pick\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h3",{attrs:{id:"git-rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[e._v("#")]),e._v(" Git rebase")]),e._v(" "),s("p",[e._v("中文叫 “变基”（从sourcetree上的翻译得来），单从名字理解起来也挺形象的，就是将当前的基础给修改掉，移花接木之类的意思吧😂")]),e._v(" "),s("p",[s("code",[e._v("rebase")]),e._v(" 实现的最终效果是跟 "),s("code",[e._v("merge")]),e._v(" 相同————将两个分支的修改合并。但略有不同，比如在新的分支中做了 C5 C6 的两次修改提交，现在要将这两个修改合到原分支上。 从下面两张图来看 "),s("code",[e._v("rebase")]),e._v(" 和 "),s("code",[e._v("merge")]),e._v(" 的区别吧：")]),e._v(" "),s("p",[s("strong",[e._v("merge")])]),e._v(" "),s("p",[s("img",{attrs:{src:"media/15553149347458/15553154431940.jpg",alt:""}})]),e._v(" "),s("p",[s("strong",[e._v("rebase")]),e._v(" "),s("img",{attrs:{src:"media/15553149347458/15553154578706.jpg",alt:""}})]),e._v(" "),s("p",[s("code",[e._v("rebase")]),e._v("操作之后将原有新分支上的 C5 C6 提交清除（C5 C6并不会马上就被丢弃，如果运行垃圾收集命令"),s("code",[e._v("pruning garbage collection")]),e._v(", 这些被丢弃的提交就会删除），最后只剩下了原分支。这样的做法可以简化分支树。")]),e._v(" "),s("h4",{attrs:{id:"如何使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[e._v("#")]),e._v(" 如何使用")]),e._v(" "),s("p",[e._v("知道什么区别之后，我们了解下如何使用：")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("#当前处于 develop 分支\n$ git checkout mywork\n$ git rebase develop\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[s("code",[e._v("rebase")]),e._v("的过程和可能会出现冲突，"),s("code",[e._v("rebase")]),e._v("会暂停这时候需要解决冲突，完成之后，使用 "),s("code",[e._v("git add")]),e._v(" 更新这些内容的索引")]),e._v(" "),s("p",[e._v("此时不需要进行"),s("code",[e._v("commit")]),e._v(" 只需要执行以下命令，"),s("code",[e._v("rebase")]),e._v("就会继续完成操作。")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ git rebase --continue\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v('在任何时候，你可以用--abort参数来终止rebase的行动，并且"mywork" 分支会回到rebase开始前的状态。')]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ git rebase --abort\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[e._v("#")]),e._v(" Reference")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/chenansic/article/details/44122107",target:"_blank",rel:"noopener noreferrer"}},[e._v("git rebase 使用详解"),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"http://gitbook.liuhui998.com/4_2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("git 中文讲解"),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://www.cnblogs.com/zqunor/p/8620335.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git删除commit提交的log记录"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);